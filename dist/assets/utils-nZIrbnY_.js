const e=new class{constructor(){this.submissions=new Map,this.cleanupInterval=3e5,setInterval(()=>this.cleanup(),this.cleanupInterval)}canSubmit(e,s=10,t=6e5){const r=Date.now(),a=(this.submissions.get(e)||[]).filter(e=>r-e<t);return this.submissions.set(e,a),a.length<s}recordSubmission(e){const s=Date.now(),t=this.submissions.get(e)||[];t.push(s),this.submissions.set(e,t)}getTimeUntilNextSubmission(e,s=6e5){const t=this.submissions.get(e)||[];if(0===t.length)return 0;const r=Math.min(...t),a=s-(Date.now()-r);return Math.max(0,a)}cleanup(){const e=Date.now();for(const[s,t]of this.submissions.entries()){const r=t.filter(s=>e-s<36e5);0===r.length?this.submissions.delete(s):this.submissions.set(s,r)}}getUserIdentifier(){const e=navigator.userAgent,s=`${screen.width}x${screen.height}`,t=Intl.DateTimeFormat().resolvedOptions().timeZone;return btoa(`${e}-${s}-${t}`).slice(0,32)}},s="https://script.google.com/macros/s/AKfycbyxCNooJdo1RbDFRXyt0WtPrtvsUQYDWYCipk1LzuEsVkOs8gqaNURT1HaIsjBPCl8b/exec",t=e=>{const s=new FormData(e),t={};for(let[r,a]of s.entries())t[r]?Array.isArray(t[r])?t[r].push(a):t[r]=[t[r],a]:t[r]=a;return t.timestamp=(new Date).toISOString(),t.userAgent=navigator.userAgent,t.referrer&&0!==String(t.referrer).trim().length||(t.referrer="unspecified"),t.pageReferrer=document.referrer||"",t},r=e=>{const s=[];return(!e.name||e.name.trim().length<2)&&s.push("Name must be at least 2 characters long"),e.email&&/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email)||s.push("Please enter a valid email address"),(!e.phone||e.phone.trim().length<10)&&s.push("Please enter a valid phone number"),(!e.address||e.address.trim().length<5)&&s.push("Please enter a complete address"),s},a=((s,t=3,r=6e5)=>async(...a)=>{const n=e.getUserIdentifier();if(!e.canSubmit(n,t,r)){const s=e.getTimeUntilNextSubmission(n,r),t=Math.ceil(s/6e4);throw new Error(`Too many submissions. Please wait ${t} minute${1!==t?"s":""} before submitting again.`)}return e.recordSubmission(n),await s(...a)})(async e=>{try{const r=new FormData;Object.entries(e).forEach(([e,s])=>{Array.isArray(s)?s.forEach(s=>r.append(e,s)):r.append(e,s)});let a=await fetch(s,{method:"POST",body:r});const n=await a.text();try{const e=JSON.parse(n);if(!1===e.success)throw new Error(e.message||"Google Sheets submission failed");return{success:!0,message:e.message||"Data saved to Google Sheets"}}catch(t){if(n.includes("success")||n.includes("saved")||n.includes("received"))return{success:!0,message:"Data saved to Google Sheets"};if(!a.ok){const t=new URLSearchParams;Object.entries(e).forEach(([e,s])=>{Array.isArray(s)?s.forEach(s=>t.append(e,s)):t.append(e,s)}),a=await fetch(s,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded;charset=UTF-8"},body:t.toString()});const r=await a.text();try{const e=JSON.parse(r);if(!1===e.success)throw new Error(e.message||`HTTP error! status: ${a.status}`);return{success:!0,message:e.message||"Data saved to Google Sheets"}}catch{if(!a.ok)throw new Error(`HTTP error! status: ${a.status}, message: ${r}`);return{success:!0,message:"Data saved to Google Sheets"}}}return{success:!0,message:"Data saved to Google Sheets"}}}catch(r){throw r}},10,6e5);export{t as f,a as s,r as v};
